import random
import os
from tkinter import *

logs = Tk()
logs.title("Karātuves")
logs.geometry("1200x900")
logs.config(bg="#E6E6E6")

# Atrod bildes directory!
script_dir = os.path.dirname(os.path.abspath(__file__))
karatuves_path = os.path.join(script_dir, "Images", "Capture.PNG")
START_POGA_path = os.path.join(script_dir, "Images", "START POGA.PNG")
End_i_path = os.path.join(script_dir, "Images", "Ded.PNG")
Karatuves_1_path = os.path.join(script_dir,"Images", "K1.PNG")
Karatuves_2_path = os.path.join(script_dir,"Images", "K2.PNG")
Karatuves_3_path = os.path.join(script_dir,"Images", "K3.PNG")
Karatuves_4_path = os.path.join(script_dir,"Images", "K4.PNG")
Karatuves_5_path = os.path.join(script_dir,"Images", "K5.PNG")

# bildes
karatuves = PhotoImage(file=karatuves_path)
START_POGA = PhotoImage(file=START_POGA_path)
End_i = PhotoImage(file=End_i_path)
K1 = PhotoImage(file=Karatuves_1_path)
K2 = PhotoImage(file=Karatuves_2_path)
K3 = PhotoImage(file=Karatuves_3_path)
K4 = PhotoImage(file=Karatuves_4_path)
K5 = PhotoImage(file=Karatuves_5_path)





start = Frame(logs, bg="#E6E6E6")
start.pack()

game = Frame(logs, bg="#E6E6E6")

end = Frame(logs, bg="#E6E6E6")

class Start:
    def main_screen(self):
        main = Canvas(start, width=1200, height=900, bg="#E6E6E6", highlightthickness=0)
        main.pack()
        main.create_text(600, 200, text="Karātuves", font=("Kozuka Gothic Pr6N B", 60, "bold"))
        main.create_image(600, 450, image=karatuves)
        main.create_image(600, 750, image=START_POGA)
        self.Start_poga()

    def Start_poga(self):
        start_button = Button(start, text="START", font=("Kozuka Gothic Pr6N B", 50, "bold"),
                              bg="#D7D7D7", activebackground="#D7D7D7", relief="flat",
                              width=10, height=1, command=self.start_action)
        start_button.place(x=385, y=685)

# start poga 

    def start_action(self):
        start.pack_forget()  # liek start screenam pazust
        game.pack()  # parādīs spēles ekrānu kad start scrēnds pazudīs
        spele_ekrans.start_new_game()  # startē spēli kad tiek parādīts game screen

start_ekrans = Start()
start_ekrans.main_screen()

class Spele_SCREEN:
    def __init__(self):

        self.vārdi = [
        "apelsīns", "ābols", "citrons", "melene", "galds", "krēsls", "grāmata", "skola", "dators", "pulkstenis", 
        "māja", "logi", "koks", "zieds", "debesis", "jūra", "mēness", "saule", "vējš", "putns", "suns", 
        "kaķis", "zirgs", "lietus", "sniegs", "siltums", "aukstums", "gadalaiks", "brīvdiena", "vakars", "rīts",
        "zāle", "kalns", "upe", "mežs", "daba", "ceļš", "akmens", "tilts", "mašīna", "vēstule"]    # šeit iet vārrdi !

        self.word = ""
        self.word_letters = []
        self.displayed_letters = []
        self.Lines = 0
        self.word_label = 0
        self.buttons = {}
        self.lives = 5  
        self.score = 0  
        self.lives_label = 0
        self.score_label = 0

    def start_new_game(self):
        for widget in game.winfo_children():#funkcija game.winfo_children atgriež visus apakšelementus (bērnus) !!!  
            widget.destroy()
        self.lives = 5
        self.score = 0
        self.speles_screen()

    def speles_screen(self):
        speles_sh = Canvas(game, width=1200, height=900, bg="#E6E6E6", highlightthickness=0)
        speles_sh.pack()

        speles_sh.create_line(0, 280, 1200, 280, fill="#ADADAD", width=7)

        self.lives_label = Label(game, text=f"Dzīvības: {self.lives}", font=("Kozuka Gothic Pr6N B", 20, "bold"), bg="#E6E6E6")
        self.lives_label.place(x=50, y=10)
        
        self.score_label = Label(game, text=f"Punkti: {self.score}", font=("Kozuka Gothic Pr6N B", 20, "bold"), bg="#E6E6E6")
        self.score_label.place(x=50, y=40)

        self.līnījas()
        self.create_buttons()

    def līnījas(self):  # izveido līnījas pa katru burtu vārdā !
        self.word = random.choice(self.vārdi)
        self.word_letters = list(self.word)
        self.displayed_letters = ["_" for _ in self.word]

        print(f"Vārds: {self.word}")  # konsolē parādās vārds kad spēle gatava komentēt !!!!
        
        word_width = len(self.word) * 45  # apmēram burtu izmers pec fonta
        canvas_width = 1200
        centered_x = (canvas_width - word_width) // 2

#notīra iepriekšējo vārdu

        if hasattr(self, 'word_label') and self.word_label: #chatins palidzeja......
            self.word_label.destroy()


# Centrē vārdu!

        self.word_label = Label(game, text=" ".join(self.displayed_letters), font=("Kozuka Gothic Pr6N B", 45, "bold"), fg="black", bg="#E6E6E6")
        self.word_label.place(x=centered_x, y=300)

    def update_display(self, letter):  #ar katru vardu kas tiks uzminēts tiks atjaunots ekrāns
        for i, char in enumerate(self.word_letters):
            if char == letter:
                self.displayed_letters[i] = letter
        self.word_label.config(text=" ".join(self.displayed_letters))
        if "_" not in self.displayed_letters:
            self.score += 1
            self.score_label.config(text=f"Punkti: {self.score}")
            self.līnījas()
            self.create_buttons()
            self.buttons(fg = "black", bg = "#D7D7D7")


    def create_buttons(self):  # izveido pogas priekš burtiem
        Alfabēts = "AĀBCČDEĒFGĢHIĪJKĶLĻMNŅOPRSŠTUŪVZŽ"
        x_positions = [180, 269, 357, 445, 533, 622, 710, 798, 886, 974]
        y_positions = [430, 524, 617, 711]
        self.buttons = {}
        
        for index, burts in enumerate(Alfabēts):
            row = index // 10  
            col = index % 10  
            Alfabēta_pogas = Button(game, text=burts, fg="#858585", font=("Kozuka Gothic Pr6N B", 23, "bold"),
                                    bg="#D7D7D7", activebackground="#D7D7D7", relief="flat", width=2, height=1,
                                    command=lambda l=burts: self.Burtu_Minēšana(l))
            Alfabēta_pogas.place(x=x_positions[col], y=y_positions[row])
            self.buttons[burts] = Alfabēta_pogas

    def Burtu_Minēšana(self, burts):
        if burts.lower() in self.word_letters:
            self.update_display(burts.lower())
            self.buttons[burts].config(fg="#289C2C",bg = "#33BB37")
        else:
            self.lives -= 1
            self.lives_label.config(text=f"Dzīvības: {self.lives}")
            self.buttons[burts].config(fg="#C53232",bg = "#E23D3D")

            if self.lives <5:
                self.Karatuves1()

            if self.lives <4:
                self.Karatuves2()

            if self.lives <3:
                self.Karatuves3()

            if self.lives <2:
                self.Karatuves4()

            if self.lives <1:
                self.Karatuves5()

            if self.lives == 0:
                logs.after(1000, self.ekrana_maina)

    def ekrana_maina(self):
        game.pack_forget()
        end.pack()

#Karatuves visi phase

    def Karatuves1(self):
        karatuves_lauks = Canvas (game, width=300, height=276, bg="#E6E6E6", highlightthickness=0)
        karatuves_lauks.create_image(150, 140, image=K1)
        karatuves_lauks.place(x=456, y=1)
    def Karatuves2(self):
        karatuves_lauks = Canvas (game, width=300, height=276, bg="#E6E6E6", highlightthickness=0)
        karatuves_lauks.create_image(150, 140, image=K2)
        karatuves_lauks.place(x=456, y=1)
    def Karatuves3(self):
        karatuves_lauks = Canvas (game, width=300, height=276, bg="#E6E6E6", highlightthickness=0)
        karatuves_lauks.create_image(150, 140, image=K3)
        karatuves_lauks.place(x=456, y=1)
    def Karatuves4(self):
        karatuves_lauks = Canvas (game, width=300, height=276, bg="#E6E6E6", highlightthickness=0)
        karatuves_lauks.create_image(150, 140, image=K4)
        karatuves_lauks.place(x=456, y=1)
    def Karatuves5(self):
        karatuves_lauks = Canvas (game, width=300, height=276, bg="#E6E6E6", highlightthickness=0)
        karatuves_lauks.create_image(150, 140, image=K5)
        karatuves_lauks.place(x=456, y=1)

spele_ekrans = Spele_SCREEN()

class Beigas(Spele_SCREEN):

    def __init__(self):
        self.beigass = Canvas(end, width=1200, height=900, bg="#E6E6E6", highlightthickness=0)
        self.beigass.pack()

        self.beigass.create_image(590, 680, image=End_i)

#RESTART POGA!!!

        restart = Button(end, text="RESTART", font=("Kozuka Gothic Pr6N B", 50, "bold"),
                         bg="#E23D3D", activebackground="#E23D3D", relief="flat",
                         width=10, height=1, command=self.restart_game)
        restart.place(x=385, y=400)

    def restart_game(self):
        end.pack_forget()
        game.pack()
        spele_ekrans.start_new_game()

end_ekrans = Beigas()

logs.mainloop()
